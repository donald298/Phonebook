@using Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal
@model List<Phonebook.Models.PeopleModel>


@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-12 bg-light" id="paging" style=" margin-top: 10px; margin-bottom: 10px; color: antiquewhite; vertical-align: center" align="center">

        <!--Indexing - only if whole phonebook, in case of search indexing is disabled-->

        @{
            if ((int)@ViewData["Page"] > 1)
            {
                <a class="btn btn-outline-info" href="@Url.Action("Index", "Person",new { page = $"{(int)@ViewData["Page"] - 1}",lastName = @ViewData["Name"]},null)"><</a>
            }
            else
            {
                <a class="btn btn-outline-info" href="@Url.Action("Index", "Person",new { page = 1,lastName = @ViewData["Name"] },null)"><</a>
            }

            for (int i = 1; i <= (int)ViewData["Pages"]; i++)
            {
                <a class="btn btn-outline-info" href="@Url.Action("Index", "Person",new { page = i,lastName = @ViewData["Name"]},null)">@i</a>
            }

            <script>

                document.addEventListener("DOMContentLoaded", function() {

                    var paging = document.querySelector('#paging');
                    paging = paging.querySelectorAll('.btn');

                    var a = @ViewData["Page"];
                    paging[a].className = "btn btn-info";
                });

            </script>

            if ((int)ViewData["Page"] < (int)ViewData["Pages"])
            {
                <a class="btn btn-outline-info" href="@Url.Action("Index", "Person",new { page = (int)ViewData["Page"] + 1,lastName = @ViewData["Name"]},null)">></a>
            }
            else
            {
                <a class="btn btn-outline-info" href="@Url.Action("Index", "Person",new { page = (int)ViewData["Pages"],lastName = @ViewData["Name"]},null)">></a>
            }
        }

    </div>
</div>


    <table class="table table-hover table-sm" style="table-layout: fixed; word-wrap: break-word">
        <thead class="thead-dark">
            <tr>
                <th scope="col" style="width: 5%">No#</th>
                <th scope="col" style="width: 10%">First Name</th>
                <th scope="col" style="width: 10%">Last Name</th>
                <th scope="col" style="width: 15%">Phone</th>
                <th scope="col" style="width: 20%">Email</th>
                <th scope="col" style="width: 10%">Created</th>
                <th scope="col" style="width: 10%">Updated</th>
                <th scope="col" style="width: 10%">Edit</th>
                <th scope="col" style="width: 10%">Remove</th>
            </tr>

        </thead>
        <tbody>
            @{
                int k = (int)ViewData["Start"];
                foreach (var record in Model)
                {

                    <tr>
                        <td>@k</td>
                        <td>@record.FirstName</td>
                        <td>@record.LastName</td>
                        <td>@record.Phone</td>
                        <td>@record.Email</td>
                        <td>@record.Created</td>

                        @if (record.Updated.Subtract(record.Created) == TimeSpan.Zero)
                        {
                            <td>N/A</td>
                        }
                        else
                        {
                            <td>
                                @record.Updated
                            </td>
                        }

                        <td>
                            <a href="@Url.Action("Edit", "Person",new { id = record.Id })" class="btn btn-outline-warning">Edit</a>
                        </td>
                        <td>
                            <a href="@Url.Action("Remove", "Person",new { id = record.Id })" class="btn btn-outline-danger">Remove</a>
                        </td>
                    </tr>
                    k++;
                }

            }
        </tbody>
    </table>

